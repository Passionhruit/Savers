"use client";
import supabase from "@/libs/supabase";
import React, { useEffect } from "react";
import { useState } from "react";
import { Database } from "@/types/supabase";

interface MarkList {
  id: number;
  restaurant_name: string;
  restaurant_address: string;
  bookmarkCount: number;
}

type LikeType = Database["public"]["Tables"]["like_restaurant"]["Row"];
type NewLikeType = Database["public"]["Tables"]["like_restaurant"]["Insert"];

const MarkerLists = ({ markerList, currentCategory }: any) => {
  const [markedList, setMarkedList] = useState<MarkList[]>([]);
  const [user, setUser] = useState<any>(null);
  const [markedByUser, setMarkedByUser] = useState<any[]>([]);

  const fetchMarkList = async () => {
    const { data: markedData } = await supabase
      .from("like_restaurant")
      .select();

    if (markedData) {
      setMarkedList(markedData);
    } else {
      return;
    }
  };

  const fetchUser = async () => {
    try {
      const {
        data: { user },
      } = await supabase.auth.getUser();

      if (!user) {
        setUser(false);
      } else {
        setUser(user);
        fetchUserBookmark(user);
      }
    } catch (error) {
      console.error("Error fetching user:", error);
    }
  };

  const fetchUserBookmark = async (user: any) => {
    const { data: existingMarkedData, error: existingLikeError } =
      await supabase.from("like_restaurant").select().eq("user_id", user.id);
    setMarkedByUser(existingMarkedData!);
    console.log("북마크된애들", existingMarkedData);
  };

  const bookmarkHandler = (place: string) => {
    const countMarkedList = markedList.filter(
      (item) => item.restaurant_name === place,
    ).length;
    return countMarkedList;
  };

  const addMarkList = async (
    category: string,
    name: string,
    address: string,
    url: string,
  ) => {
    if (user) {
      const { data: userMarkList } = await supabase
        .from("like_restaurant")
        .select()
        .eq("user_id", user.id)
        .eq("restaurant_name", name);
      console.log(userMarkList);

      if (userMarkList?.length !== 0) {
        const { error: addMarkListError } = await supabase
          .from("like_restaurant")
          .delete()
          .eq("user_id", user.id)
          .eq("restaurant_name", name);

        // alert("좋아요가 해제되었습니다.");
      } else {
        const { error: addMarkListError } = await supabase
          .from("like_restaurant")
          .insert({
            restaurant_category: category,
            restaurant_address: address,
            restaurant_name: name,
            user_id: user.id,
            restaurant_map: url,
          });
        // alert("좋아요를 눌렀습니다.");
      }
    } else {
      alert("로그인 후 사용해주세요.");
      return;
    }
  };

  const toggleMark = async (name: string) => {
    if (markedByUser.some((item) => item.restaurant_name === name)) {
      // 이미 북마크한 경우, 제거
      setMarkedByUser((prevMarkedByUser) =>
        prevMarkedByUser.filter((item) => item.restaurant_name !== name),
      );
    } else {
      // 북마크하지 않은 경우, 추가
      setMarkedByUser((prevMarkedByUser) => [
        ...prevMarkedByUser,
        { restaurant_name: name },
      ]);
    }
  };

  const shareBtn = (place: any) => {
    window.Kakao.Share.sendDefault({
      objectType: "location",
      address: place.address_name,
      addressTitle: place.place_name,
      content: {
        title: place.place_name,
        description: place.place_url,
        imageUrl: "https://ifh.cc/g/flbgkf.webp",
        link: {
          webUrl: "http:localhost:3000",
          mobileWebUrl: "http:localhost:3000",
        },
      },
      buttons: [
        {
          title: "웹으로 보기",
          link: {
            webUrl: "https://place.map.kakao.com/201218594",
            mobileWebUrl: "https://place.map.kakao.com/201218594",
          },
        },
      ],
    });
  };

  useEffect(() => {
    fetchUser();
    fetchMarkList();
  }, []);

  return (
    <div className="overflow-auto h-[33vw]">
      {/* display:flex; justify-content: center; */}
      <ul>
        {/* markerList 정보를 사용하여 리스트를 렌더링합니다 */}
        {markerList.map((place: any, index: number) => (
          <div
            key={index}
            className="border text-sm p-2 rounded-lg mb-3 pt-4 pb-2 "
          >
            <div className="float-left ml-2">
              {currentCategory.includes("카페") ? (
                <svg
                  width="40"
                  height="40"
                  viewBox="0 0 56 56"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  className="mt-4 mr-[7px] border rounded-full"
                >
                  <rect width="56" height="56" rx="28" fill="#F9FAFB" />
                  <path
                    d="M21.8193 15.5C21.1302 15.5 20.5719 16.0583 20.5719 16.7474V19.1073C20.5719 19.7965 21.1302 20.3547 21.8193 20.3547C22.5085 20.3547 23.0667 19.7965 23.0667 19.1073V16.7474C23.0667 16.0583 22.5085 15.5 21.8193 15.5Z"
                    fill="#D0D5DD"
                  />
                  <path
                    d="M26.3061 15.5C25.617 15.5 25.0587 16.0583 25.0587 16.7474V19.1073C25.0587 19.7964 25.617 20.3547 26.3061 20.3547C26.9952 20.3547 27.5535 19.7965 27.5535 19.1073V16.7474C27.5535 16.0583 26.9952 15.5 26.3061 15.5Z"
                    fill="#D0D5DD"
                  />
                  <path
                    d="M30.7916 15.5C30.1024 15.5 29.5441 16.0583 29.5441 16.7474V19.1073C29.5441 19.7965 30.1024 20.3547 30.7916 20.3547C31.4807 20.3547 32.039 19.7965 32.039 19.1073V16.7474C32.039 16.0583 31.4807 15.5 30.7916 15.5Z"
                    fill="#D0D5DD"
                  />
                  <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M18.8289 22.3052C17.7278 22.3026 16.8335 23.1986 16.8335 24.2989V36.2618C16.8335 38.5995 18.734 40.5 21.0716 40.5H31.5387C33.8764 40.5 35.7768 38.5995 35.7768 36.2618V36.0144H36.7873C39.5369 36.0144 41.7729 33.7784 41.7729 31.0289C41.7729 28.2793 39.5369 26.0433 36.7873 26.0433H35.7768V24.3C35.7768 23.1985 34.8814 22.3052 33.7809 22.3052H18.8289ZM19.3283 36.2618V24.7989H33.282V36.2618C33.282 37.2224 32.4992 38.0052 31.5387 38.0052H21.0716C20.1111 38.0052 19.3283 37.2224 19.3283 36.2618ZM35.7768 33.5185V28.537H36.7873C38.1598 28.537 39.2781 29.6553 39.2781 31.0278C39.2781 32.4002 38.1598 33.5185 36.7873 33.5185H35.7768Z"
                    fill="#D0D5DD"
                  />
                </svg>
              ) : currentCategory.includes("베이커리") ? (
                <svg
                  width="40"
                  height="40"
                  viewBox="0 0 56 56"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  className="mt-4 mr-[7px] border rounded-full"
                >
                  <rect width="56" height="56" rx="28" fill="#F9FAFB" />
                  <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M37.8875 18.511C38.8714 19.4961 39.3572 20.6419 39.3323 21.8986C39.3111 23.0955 38.8278 24.2575 38.164 25.341C37.2796 26.7882 35.9283 28.3151 34.4174 29.8807L33.5804 30.7388L32.721 31.6031L31.1392 33.1824L30.2175 34.0916C28.5336 35.7318 26.892 37.2139 25.3413 38.1629C24.2577 38.8268 23.0957 39.3087 21.8987 39.3324C20.642 39.3573 19.4961 38.8716 18.5109 37.8864C17.0325 36.4081 16.3985 33.7204 16.7709 30.8559C17.1358 28.0461 18.4785 24.874 21.2112 21.9883L21.6135 21.5748C24.599 18.5981 27.9245 17.1522 30.8553 16.7711C33.7212 16.3987 36.409 17.0326 37.8875 18.511ZM36.1263 20.2733C35.4026 19.5497 33.6253 18.9232 31.1766 19.2408C30.641 19.3105 30.0818 19.4251 29.5076 19.5908C29.8314 19.9644 30.2549 20.2322 30.7955 20.4128C30.9526 20.4629 31.0982 20.5437 31.2239 20.6506C31.3495 20.7575 31.4527 20.8882 31.5274 21.0353C31.6021 21.1824 31.6468 21.3428 31.659 21.5073C31.6712 21.6718 31.6506 21.837 31.5984 21.9935C31.5462 22.15 31.4634 22.2945 31.3549 22.4187C31.2463 22.5429 31.1142 22.6444 30.9662 22.7171C30.8181 22.7898 30.6571 22.8324 30.4925 22.8424C30.3278 22.8525 30.1628 22.8297 30.0071 22.7754C28.7491 22.3569 27.7801 21.6022 27.1324 20.5473C25.9999 21.1437 24.9478 21.8815 24.0012 22.743C24.1992 23.0382 24.4645 23.3657 24.7858 23.687C25.3139 24.2139 25.8545 24.5912 26.2506 24.7619L26.3913 24.8167C26.7048 24.9211 26.964 25.1457 27.1118 25.4411C27.2597 25.7366 27.2841 26.0787 27.1797 26.3922C27.0753 26.7056 26.8507 26.9648 26.5552 27.1127C26.2597 27.2605 25.9176 27.2849 25.6041 27.1805C24.6849 26.8742 23.7533 26.1755 23.0259 25.4481C22.7495 25.1724 22.4908 24.8796 22.2512 24.5713C21.4586 25.5275 20.7915 26.5809 20.2658 27.7061C20.6034 28.4584 21.1576 28.9441 21.9884 29.2206C22.2976 29.3283 22.552 29.5535 22.6964 29.8474C22.8408 30.1413 22.8637 30.4803 22.76 30.7909C22.6564 31.1015 22.4345 31.3588 22.1426 31.5071C21.8506 31.6554 21.512 31.6827 21.2 31.5832C20.5192 31.3633 19.888 31.0126 19.3417 30.5507C19.3018 30.7625 19.2669 30.9717 19.242 31.1772C18.9232 33.6258 19.5497 35.403 20.2733 36.1266C20.8288 36.6821 21.3395 36.8527 21.8514 36.8428C22.4218 36.8315 23.138 36.5924 24.041 36.0394C25.2267 35.3146 26.5171 34.1899 27.9432 32.8262L28.7341 32.0577L29.9734 30.8285L31.6574 29.1409L32.447 28.3363C33.9828 26.7546 35.2482 25.3348 36.0391 24.042C36.5921 23.1391 36.8313 22.4229 36.8425 21.8525C36.8524 21.3419 36.6818 20.83 36.1263 20.2733Z"
                    fill="#D0D5DD"
                  />
                </svg>
              ) : currentCategory.includes("식당") ? (
                <svg
                  width="40"
                  height="40"
                  viewBox="0 0 56 56"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  className="mt-4 mr-[7px] border rounded-full"
                >
                  <rect width="56" height="56" rx="28" fill="#F9FAFB" />
                  <path
                    d="M18.7169 28.1498C18.7748 28.1933 18.8234 28.248 18.8598 28.3106C18.8961 28.3732 18.9196 28.4425 18.9286 28.5144C18.4699 30.7138 17.3173 37.2062 19.2815 39.1822C20.021 39.7587 20.9447 40.0471 21.8808 39.9937C22.817 40.0471 23.7406 39.7587 24.4801 39.1822C26.4443 37.2062 25.2917 30.7138 24.833 28.5144C24.8421 28.4425 24.8655 28.3732 24.9019 28.3106C24.9382 28.248 24.9868 28.1933 25.0447 28.1498L26.4326 27.0324C26.8525 26.6977 27.1905 26.2716 27.4208 25.7865C27.6512 25.3014 27.7677 24.7701 27.7616 24.2331V17.1762C27.7616 16.8642 27.6377 16.5651 27.4171 16.3445C27.1966 16.1239 26.8974 16 26.5855 16C26.2735 16 25.9744 16.1239 25.7538 16.3445C25.5332 16.5651 25.4093 16.8642 25.4093 17.1762V24.2331C25.4085 24.4098 25.3679 24.584 25.2905 24.7428C25.2131 24.9017 25.101 25.041 24.9624 25.1505L23.5745 26.2679C23.2209 26.5478 22.937 26.906 22.7452 27.3141C22.5534 27.7223 22.4588 28.1694 22.4689 28.6202C22.4631 28.7025 22.4631 28.785 22.4689 28.8672C23.3157 32.8074 23.4686 36.8534 22.8335 37.4885C22.2131 37.682 21.5485 37.682 20.9281 37.4885C20.2459 36.8181 20.3988 32.7838 21.2457 28.8319C21.2515 28.7497 21.2515 28.6672 21.2457 28.5849C21.2558 28.1341 21.1612 27.687 20.9694 27.2788C20.7776 26.8707 20.4937 26.5126 20.1401 26.2326L18.7993 25.1976C18.6543 25.0832 18.5383 24.9363 18.4606 24.7687C18.383 24.6012 18.3459 24.4177 18.3523 24.2331V17.1762C18.3523 16.8642 18.2284 16.5651 18.0078 16.3445C17.7873 16.1239 17.4881 16 17.1762 16C16.8642 16 16.5651 16.1239 16.3445 16.3445C16.1239 16.5651 16 16.8642 16 17.1762V24.2331C16.001 24.7622 16.121 25.2842 16.3511 25.7606C16.5811 26.237 16.9154 26.6556 17.3291 26.9854L18.7169 28.1498Z"
                    fill="#D0D5DD"
                  />
                  <path
                    d="M20.7047 17.1762V23.057C20.7047 23.3689 20.8286 23.6681 21.0492 23.8887C21.2697 24.1092 21.5689 24.2331 21.8808 24.2331C22.1928 24.2331 22.4919 24.1092 22.7125 23.8887C22.9331 23.6681 23.057 23.3689 23.057 23.057V17.1762C23.057 16.8642 22.9331 16.5651 22.7125 16.3445C22.4919 16.1239 22.1928 16 21.8808 16C21.5689 16 21.2697 16.1239 21.0492 16.3445C20.8286 16.5651 20.7047 16.8642 20.7047 17.1762Z"
                    fill="#D0D5DD"
                  />
                  <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M28.9377 24.2331C28.9377 20.6341 31.5018 16 34.2305 16C36.9592 16 39.5232 20.6341 39.5232 24.2331C39.5996 25.172 39.4394 26.115 39.0572 26.9759C38.675 27.8368 38.0831 28.5882 37.3355 29.1613C38.2882 34.4775 38.1353 37.8766 36.8298 39.1822C36.0903 39.7587 35.1666 40.0471 34.2305 39.9937C33.2943 40.0471 32.3706 39.7587 31.6311 39.1822C30.3256 37.8766 30.1727 34.5128 31.1489 29.173C30.3945 28.6022 29.7963 27.8502 29.4098 26.9867C29.0232 26.1232 28.8609 25.1761 28.9377 24.2331ZM35.1607 28.2767C35.3338 27.8596 35.6233 27.5011 35.9947 27.2441C36.4112 26.8681 36.7344 26.4003 36.9385 25.8776C37.1427 25.3549 37.2222 24.7919 37.1709 24.2331C37.1709 21.2104 35.0302 18.3523 34.2305 18.3523C33.4307 18.3523 31.29 21.2104 31.29 24.2331C31.25 24.7899 31.3397 25.3484 31.5519 25.8648C31.7642 26.3811 32.0932 26.8411 32.5133 27.2088C32.8846 27.4658 33.1741 27.8243 33.3473 28.2415C33.5204 28.6586 33.5697 29.1167 33.4895 29.5612C32.5721 34.5363 32.9014 37.0533 33.3248 37.4767C33.9452 37.6703 34.6098 37.6703 35.2302 37.4767C35.6066 37.0886 35.9359 34.5716 35.0185 29.5964C34.9382 29.152 34.9876 28.6939 35.1607 28.2767Z"
                    fill="#D0D5DD"
                  />
                </svg>
              ) : (
                <svg
                  width="40"
                  height="40"
                  viewBox="0 0 56 56"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  className="mt-4 mr-[7px] border rounded-full"
                >
                  <rect width="56" height="56" rx="28" fill="#F9FAFB" />
                  <path
                    d="M20.5324 37.4899C20.5324 37.4899 27.588 36.9777 29.1314 31.5991C30.6748 26.2205 31.1157 20.3296 38.8327 17C38.3918 20.0735 38.5241 22.1993 38.7886 24.7605C39.0532 27.2962 39.1635 29.8318 38.5461 32.3162C37.9288 34.8774 36.4956 37.0545 34.423 38.2583C28.2494 41.844 22.0758 39.0266 20.5324 37.4899Z"
                    fill="#D0D5DD"
                  />
                  <path
                    d="M35.4676 37.4899C35.4676 37.4899 28.4058 36.9777 26.861 31.5991C25.3162 26.2205 24.8748 20.3296 17.151 17C17.5923 20.0735 17.4599 22.1993 17.1951 24.7605C16.9523 27.2706 16.842 29.8062 17.4378 32.2906C18.0778 34.8774 19.4902 37.0545 21.5646 38.2583C27.7437 41.844 33.9228 39.0266 35.4676 37.4899Z"
                    fill="#D0D5DD"
                  />
                </svg>
              )}
            </div>
            <div>
              {/* <p>{place.category_name}</p> */}
              <p className="font-bold">{place.place_name}</p>
              <p>{place.address_name}</p>
              {/* <p>📌 {bookmarkHandler(place.place_name)}</p> */}
              <button
                onClick={(e) => {
                  e.preventDefault();
                  addMarkList(
                    place.category_name,
                    place.place_name,
                    place.address_name,
                    place.place_url,
                  );
                  toggleMark(place.place_name);
                }}
                className="mr-3"
              >
                {markedByUser?.find(
                  (item) => item.restaurant_name === place.place_name,
                ) ? (
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="17"
                    viewBox="0 0 16 17"
                    fill="none"
                    className="inline mr-1"
                  >
                    <path
                      d="M11.125 2.25C9.86938 2.25 8.755 2.74563 8 3.5975C7.245 2.74563 6.13062 2.25 4.875 2.25C3.78139 2.25132 2.73295 2.68635 1.95965 3.45965C1.18635 4.23295 0.751323 5.28139 0.75 6.375C0.75 10.8962 7.36312 14.5088 7.64437 14.6606C7.75367 14.7195 7.87586 14.7503 8 14.7503C8.12414 14.7503 8.24633 14.7195 8.35563 14.6606C8.63688 14.5088 15.25 10.8962 15.25 6.375C15.2487 5.28139 14.8137 4.23295 14.0404 3.45965C13.2671 2.68635 12.2186 2.25132 11.125 2.25ZM10.7819 11.1475C9.91142 11.8861 8.98091 12.5509 8 13.135C7.01909 12.5509 6.08858 11.8861 5.21812 11.1475C3.86375 9.98563 2.25 8.21375 2.25 6.375C2.25 5.67881 2.52656 5.01113 3.01884 4.51884C3.51113 4.02656 4.17881 3.75 4.875 3.75C5.9875 3.75 6.91875 4.3375 7.30562 5.28375C7.36193 5.42169 7.45805 5.53974 7.58172 5.62283C7.70539 5.70592 7.85101 5.7503 8 5.7503C8.14899 5.7503 8.29461 5.70592 8.41828 5.62283C8.54195 5.53974 8.63807 5.42169 8.69438 5.28375C9.08125 4.3375 10.0125 3.75 11.125 3.75C11.8212 3.75 12.4889 4.02656 12.9812 4.51884C13.4734 5.01113 13.75 5.67881 13.75 6.375C13.75 8.21375 12.1362 9.98563 10.7819 11.1475Z"
                      fill="#5FD100"
                    />
                  </svg>
                ) : (
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="17"
                    viewBox="0 0 16 17"
                    fill="none"
                    className="inline mr-1"
                  >
                    <path
                      d="M11.125 2.25C9.86938 2.25 8.755 2.74563 8 3.5975C7.245 2.74563 6.13062 2.25 4.875 2.25C3.78139 2.25132 2.73295 2.68635 1.95965 3.45965C1.18635 4.23295 0.751323 5.28139 0.75 6.375C0.75 10.8962 7.36312 14.5088 7.64437 14.6606C7.75367 14.7195 7.87586 14.7503 8 14.7503C8.12414 14.7503 8.24633 14.7195 8.35563 14.6606C8.63688 14.5088 15.25 10.8962 15.25 6.375C15.2487 5.28139 14.8137 4.23295 14.0404 3.45965C13.2671 2.68635 12.2186 2.25132 11.125 2.25ZM10.7819 11.1475C9.91142 11.8861 8.98091 12.5509 8 13.135C7.01909 12.5509 6.08858 11.8861 5.21812 11.1475C3.86375 9.98563 2.25 8.21375 2.25 6.375C2.25 5.67881 2.52656 5.01113 3.01884 4.51884C3.51113 4.02656 4.17881 3.75 4.875 3.75C5.9875 3.75 6.91875 4.3375 7.30562 5.28375C7.36193 5.42169 7.45805 5.53974 7.58172 5.62283C7.70539 5.70592 7.85101 5.7503 8 5.7503C8.14899 5.7503 8.29461 5.70592 8.41828 5.62283C8.54195 5.53974 8.63807 5.42169 8.69438 5.28375C9.08125 4.3375 10.0125 3.75 11.125 3.75C11.8212 3.75 12.4889 4.02656 12.9812 4.51884C13.4734 5.01113 13.75 5.67881 13.75 6.375C13.75 8.21375 12.1362 9.98563 10.7819 11.1475Z"
                      fill="#D0D5DD"
                    />
                  </svg>
                )}
                <span style={{ color: "#D0D5DD" }}>
                  {bookmarkHandler(place.place_name)}
                </span>
              </button>
              <span className="pt-[4px] pr-2 pl-[6px] pb-2 border border-gray-100 rounded-full  cursor-pointer ">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  className="inline-block"
                  onClick={() => shareBtn(place)}
                >
                  <path
                    d="M12 14.6666C11.4444 14.6666 10.9722 14.4722 10.5833 14.0833C10.1944 13.6944 10 13.2222 10 12.6666C10 12.5889 10.0056 12.5082 10.0167 12.4246C10.0278 12.3411 10.0444 12.2662 10.0667 12.2L5.36667 9.46665C5.17778 9.63331 4.96667 9.76398 4.73333 9.85865C4.5 9.95331 4.25556 10.0004 4 9.99998C3.44444 9.99998 2.97222 9.80554 2.58333 9.41665C2.19444 9.02776 2 8.55554 2 7.99998C2 7.44442 2.19444 6.9722 2.58333 6.58331C2.97222 6.19442 3.44444 5.99998 4 5.99998C4.25556 5.99998 4.5 6.04731 4.73333 6.14198C4.96667 6.23665 5.17778 6.36709 5.36667 6.53331L10.0667 3.79998C10.0444 3.73331 10.0278 3.65842 10.0167 3.57531C10.0056 3.4922 10 3.41154 10 3.33331C10 2.77776 10.1944 2.30554 10.5833 1.91665C10.9722 1.52776 11.4444 1.33331 12 1.33331C12.5556 1.33331 13.0278 1.52776 13.4167 1.91665C13.8056 2.30554 14 2.77776 14 3.33331C14 3.88887 13.8056 4.36109 13.4167 4.74998C13.0278 5.13887 12.5556 5.33331 12 5.33331C11.7444 5.33331 11.5 5.2862 11.2667 5.19198C11.0333 5.09776 10.8222 4.96709 10.6333 4.79998L5.93333 7.53331C5.95556 7.59998 5.97222 7.67509 5.98333 7.75865C5.99444 7.8422 6 7.92265 6 7.99998C6 8.07776 5.99444 8.15842 5.98333 8.24198C5.97222 8.32554 5.95556 8.40042 5.93333 8.46665L10.6333 11.2C10.8222 11.0333 11.0333 10.9029 11.2667 10.8086C11.5 10.7144 11.7444 10.6671 12 10.6666C12.5556 10.6666 13.0278 10.8611 13.4167 11.25C13.8056 11.6389 14 12.1111 14 12.6666C14 13.2222 13.8056 13.6944 13.4167 14.0833C13.0278 14.4722 12.5556 14.6666 12 14.6666ZM12 3.99998C12.1889 3.99998 12.3473 3.93598 12.4753 3.80798C12.6033 3.67998 12.6671 3.52176 12.6667 3.33331C12.6667 3.14442 12.6027 2.98598 12.4747 2.85798C12.3467 2.72998 12.1884 2.6662 12 2.66665C11.8111 2.66665 11.6527 2.73065 11.5247 2.85865C11.3967 2.98665 11.3329 3.14487 11.3333 3.33331C11.3333 3.5222 11.3973 3.68065 11.5253 3.80865C11.6533 3.93665 11.8116 4.00042 12 3.99998ZM4 8.66665C4.18889 8.66665 4.34733 8.60265 4.47533 8.47465C4.60333 8.34665 4.66711 8.18842 4.66667 7.99998C4.66667 7.81109 4.60267 7.65265 4.47467 7.52465C4.34667 7.39665 4.18844 7.33287 4 7.33331C3.81111 7.33331 3.65267 7.39731 3.52467 7.52531C3.39667 7.65331 3.33289 7.81154 3.33333 7.99998C3.33333 8.18887 3.39733 8.34731 3.52533 8.47531C3.65333 8.60331 3.81156 8.66709 4 8.66665ZM12 13.3333C12.1889 13.3333 12.3473 13.2693 12.4753 13.1413C12.6033 13.0133 12.6671 12.8551 12.6667 12.6666C12.6667 12.4778 12.6027 12.3193 12.4747 12.1913C12.3467 12.0633 12.1884 11.9995 12 12C11.8111 12 11.6527 12.064 11.5247 12.192C11.3967 12.32 11.3329 12.4782 11.3333 12.6666C11.3333 12.8555 11.3973 13.014 11.5253 13.142C11.6533 13.27 11.8116 13.3338 12 13.3333Z"
                    fill="#98A2B3"
                  />
                </svg>
              </span>
              <button
                onClick={() => window.open(`${place.place_url}`)}
                className="px-[8px] py-[10px] bg-gray-50 ml-2 text-[14px] text-gray-500 rounded-2xl cursor-pointer"
              >
                상세보기
              </button>
            </div>
          </div>
        ))}
      </ul>
    </div>
  );
};

export default MarkerLists;
